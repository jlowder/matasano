-------> - Generate 2 random primes. We'll use small numbers to start, so you
------->   can just pick them out of a prime table. Call them "p" and "q".
p=467 q=383 
-------> - Let n be p * q. Your RSA math is modulo n.
n=178861 
-------> - Let et be (p-1)*(q-1) (the "totient"). You need this value only for
------->   keygen.
et=178012 
-------> - Let e be 3.
e=3 
-------> - Compute d = invmod(e, et). invmod(17, 3120) is 2753.
d=118675 
-------> Your public key is [e, n]. Your private key is [d, n].
public-key=(3 178861) private-key=(118675 178861) 
-------> To encrypt: c = m**e%n. To decrypt: m = c**d%n
-------> Test this out with a number, like "42".
m=42 c=74088 m1=42 
-------> Repeat with bignum primes (keep e=3).
p=1118534322184010997187912143247526748026617325273089222622399611128596681859356278389662198526747206627144067482489858430084432878104970142253896718237605451302008262453626035704355939542001462463561804578290835636380436320210678320027845698381069061116688057945566097176061792037316102743047516131840939199820370454733315802436532354796273523156736603391965510307633148434066882699429072237762067409435958353891024391537993834751550100597187583766460655833428719 q=45831845721607928795995541520943089781254613995206367556356043847113275469835476930164333611866390055374126257631311396081588015249535095794226808958824145769067353299646854353388151153910094130354904989875292917969790657956775277520106807703662905596988413564198879843318326882946386160877938995194666625956089067685335956339227140776133438619361465011076671695009803663318529187415177920764188103197260689566026219151352243585573536153289729902798366456545101 
n=51264492488660889019848769129544411965258569422381347096658086706608022904190858712166372844324608410846940605554048697545353174991887343479937224853887184972769302675544410931841240309682329987459509000988980981168420828049447238570742627402995246403869318312791127437656803992479016385455346624049862049614522792917039918097528167023442884605082840385629297668098403078994119627748582751721425389690056195577558695815325547555432293875209229831038199012261885490793857380456675881544906306090817468514838735695258158789209899455259030684852356493154997513254333054651920894086631319810998999271105687488897388337447717226719265989900764337354174961965554742431175942569436072711084991151088987007976606339348446620243841446781830155070338744751552177549691066685723389191245262905265477659435063546284779838075590392114687243416013350895238988507701964287924146990828145062506730552477614200912912639707220672107692155619 
et=51264492488660889019848769129544411965258569422381347096658086706608022904190858712166372844324608410846940605554048697545353174991887343479937224853887184972769302675544410931841240309682329987459509000988980981168420828049447238570742627402995246403869318312791127437656803992479016385455346624049862049614522792917039918097528167023442884605082840385629297668098403078994119627748582751721425389690056195577558695815325547555432293875209229831038199012261884326427689474837749897637221537620979660642899467399667980033554923745301701493097036666622858899657650536458180772916805153790105644765867639365370191907850646151103512717010706593263479050408960825721607776440881722484106823697491439055470521607381732943772331681804810774951418482262648252094564031079897612731722844253506701899939491139323003740007187349932684600463915965483352144257543438032411513771784688011896041206399277077276162162393551413085402181800 
d=34176328325773926013232512753029607976839046281587564731105391137738681936127239141444248562883072273897960403702699131696902116661258228986624816569258123315179535117029607287894160206454886658306339333992653987445613885366298159047161751601996830935912878875194084958437869328319344256970231082699908033076348528611359945398352111348961923070055226923752865112065602052662746418499055167814283593126704130385039130543550365036954862583472819887358799341507922884285126316558499931758147691747319773761932978266445320022369949163534467662064691111081905933105100357638787181944536769193403763177245092910246794605233764100735675144673804395508986033605973883814405184293921148322737882464994292703647014404921155295848221121203207183300945654841765501396376020719931741821148562835671134599959660759548669160004791566621789733642610643655568096171695625354941009181189792007930694137599518051517441441595700942056934787867 
m=42 c=74088 m1=42 
-------> Finally, to encrypt a string, do something cheesy, like convert the
-------> string to hex and put "0x" on the front of it to turn it into a
-------> number. The math cares not how stupidly you feed it strings.
plaintext=Good humor man kills 12 m=6842141791422321041488037885198263966456996508813242674 c=320314213130919999416039262429142971573683812695845474988006221372903799891439136717864478986105180468423274583690050452222230843676266462088283314532142661682558024 m1=6842141791422321041488037885198263966456996508813242674 recovered-plaintext=Good humor man kills 12 
